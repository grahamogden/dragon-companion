/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

input,
    select,
    textarea {
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(26 25 24 / var(--tw-border-opacity));
  background-color: transparent;
  padding: 0.5rem;
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

h1 {
  margin-bottom: 1rem;
  border-bottom-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(26 25 24 / var(--tw-border-opacity));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 700;
}

h1:where(.dark, .dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(217 208 191 / var(--tw-border-opacity));
}

a,
    button,
    input,
    select,
    textarea {
  display: inline-block;
}

a,
    button,
    input[type=button],
    input[type=submit] {
  cursor: pointer;
}

a {
  --tw-text-opacity: 1;
  color: rgb(25 74 237 / var(--tw-text-opacity));
  text-decoration-line: underline;
}

a:where(.dark, .dark *) {
  --tw-text-opacity: 1;
  color: rgb(126 197 246 / var(--tw-text-opacity));
}

pre {
  white-space: break-spaces;
  text-wrap: wrap;
  word-break: break-all;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.stitching {
  position: relative;
  &:before {
    content: '';
  }
  &:before {
    position: absolute;
  }
  &:before {
    top: 0px;
  }
  &:before {
    left: 0px;
  }
  &:before {
    border-radius: 0.125rem;
  }
  &:before {
    border-width: 1px;
  }
  &:before {
    border-style: dashed;
  }
  &:before {
    --tw-border-opacity: 1;
    border-color: rgb(217 208 191 / var(--tw-border-opacity));
  }
  &:before {
    width: 100%;
    height: 100%;
  }
}

.stitching-bottom {
  position: relative;
  &:after {
    content: '';
  }
  &:after {
    position: absolute;
  }
  &:after {
    border-radius: 0.125rem;
  }
  &:after {
    border-bottom-width: 1px;
  }
  &:after {
    border-style: dashed;
  }
  &:after {
    --tw-border-opacity: 1;
    border-color: rgb(217 208 191 / var(--tw-border-opacity));
  }
  &:after {
    width: 100%;
    height: 0;
    bottom: 0.2rem;
    left: 0;
  }
}

.stitching-top {
  position: relative;
  &:before {
    content: '';
  }
  &:before {
    position: absolute;
  }
  &:before {
    border-radius: 0.125rem;
  }
  &:before {
    border-top-width: 1px;
  }
  &:before {
    border-style: dashed;
  }
  &:before {
    --tw-border-opacity: 1;
    border-color: rgb(217 208 191 / var(--tw-border-opacity));
  }
  &:before {
    width: 100%;
    height: 0;
    top: 0.2rem;
    left: 0;
  }
}

.destructive-button {
  border-radius: 0.375rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(220 38 38 / var(--tw-border-opacity));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
}

/* .campaign-picker,
    .nav-link {
        @apply text-parchment-pale p-2 text-center;
    } */

/* .kebab-menu-container {
        > .kebab-menu {
            display: none;
            text-align: left;
        }

        &:hover {
            > .kebab-menu {
                display: block;
            }
        }
    } */

/* nav,
    .nav {
        @apply bg-leather-brown bg-leather-texture bg-repeat bg-left-top flex-col shadow-md shadow-neutral-950 py-4 min-h-12;

        &.hidden.open {
            @apply flex;
        }
    } */

nav a.router-link-active {
  top: 1rem;
}

.entity-list-table {
  width: 100%;
  border-collapse: collapse;
  border-width: 0px;
  --tw-border-opacity: 1;
  border-color: rgb(26 25 24 / var(--tw-border-opacity));
}

.entity-list-table:where(.dark, .dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(217 208 191 / var(--tw-border-opacity));
}

.entity-list-table {
  thead {
    --tw-bg-opacity: 1;
    background-color: rgb(202 189 167 / var(--tw-bg-opacity));
  }
  thead:where(.dark, .dark *) {
    --tw-bg-opacity: 1;
    background-color: rgb(101 76 46 / var(--tw-bg-opacity));
  }
  tbody tr:nth-of-type(odd) {
    --tw-bg-opacity: 1;
    background-color: rgb(217 208 191 / var(--tw-bg-opacity));
  }
  tbody tr:nth-of-type(odd):where(.dark, .dark *) {
    --tw-bg-opacity: 1;
    background-color: rgb(32 22 14 / var(--tw-bg-opacity));
  }
  tbody tr:nth-of-type(even) {
    --tw-bg-opacity: 1;
    background-color: rgb(239 236 229 / var(--tw-bg-opacity));
  }
  tbody tr:nth-of-type(even):where(.dark, .dark *) {
    --tw-bg-opacity: 1;
    background-color: rgb(88 65 43 / var(--tw-bg-opacity));
  }
  th,
        td {
    border-width: 1px;
  }
  th,
        td {
    border-top-width: 0px;
    border-bottom-width: 0px;
  }
  th,
        td {
    border-left-width: 0px;
    border-right-width: 0px;
  }
  th,
        td {
    --tw-border-opacity: 1;
    border-color: rgb(26 25 24 / var(--tw-border-opacity));
  }
  th,
        td {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
  th,
        td {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }
  th,
        td {
    text-align: left;
  }
  th,
        td {
    vertical-align: top;
  }
  th:where(.dark, .dark *),
        td:where(.dark, .dark *) {
    --tw-border-opacity: 1;
    border-color: rgb(217 208 191 / var(--tw-border-opacity));
  }
  th,
        td {
    &.action-cell {
      text-align: right;
    }
    &.action-cell {
      > .kebab-menu-container {
        display: inline-block;
      }
    }
  }
  th {
    font-weight: 700;
  }
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.left-2 {
  left: 0.5rem;
}

.right-0 {
  right: 0px;
}

.right-2 {
  right: 0.5rem;
}

.top-0 {
  top: 0px;
}

.top-2 {
  top: 0.5rem;
}

.top-8 {
  top: 2rem;
}

.top-full {
  top: 100%;
}

.-z-10 {
  z-index: -10;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.h-20 {
  height: 5rem;
}

.h-full {
  height: 100%;
}

.max-h-0 {
  max-height: 0px;
}

.min-h-12 {
  min-height: 3rem;
}

.min-h-full {
  min-height: 100%;
}

.w-20 {
  width: 5rem;
}

.w-44 {
  width: 11rem;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.w-full {
  width: 100%;
}

.min-w-48 {
  min-width: 12rem;
}

.max-w-page {
  max-width: 120rem;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-x-10 {
  -moz-column-gap: 2.5rem;
       column-gap: 2.5rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.gap-x-8 {
  -moz-column-gap: 2rem;
       column-gap: 2rem;
}

.gap-y-6 {
  row-gap: 1.5rem;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-none {
  border-radius: 0px;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-4 {
  border-width: 4px;
}

.border-dashed {
  border-style: dashed;
}

.border-dark-brown {
  --tw-border-opacity: 1;
  border-color: rgb(26 25 24 / var(--tw-border-opacity));
}

.border-leather-brown {
  --tw-border-opacity: 1;
  border-color: rgb(78 60 50 / var(--tw-border-opacity));
}

.border-parchment {
  --tw-border-opacity: 1;
  border-color: rgb(217 208 191 / var(--tw-border-opacity));
}

.border-parchment-pale {
  --tw-border-opacity: 1;
  border-color: rgb(217 208 191 / var(--tw-border-opacity));
}

.bg-leather-brown {
  --tw-bg-opacity: 1;
  background-color: rgb(78 60 50 / var(--tw-bg-opacity));
}

.bg-parchment {
  --tw-bg-opacity: 1;
  background-color: rgb(217 208 191 / var(--tw-bg-opacity));
}

.bg-parchment-pale {
  --tw-bg-opacity: 1;
  background-color: rgb(217 208 191 / var(--tw-bg-opacity));
}

.bg-stone-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(41 37 36 / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-content-texture {
  background-image: url('/src/assets/images/content-texture.png');
}

.bg-gradient-to-t {
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.bg-leather-texture {
  background-image: url('/src/assets/images/leather-texture.png');
}

.bg-navigation-leather-tab {
  background-image: url('/src/assets/images/leather-tab.svg');
}

.from-stone-950 {
  --tw-gradient-from: #0c0a09 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(12 10 9 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.bg-100 {
  background-size: 10rem;
}

.bg-cover {
  background-size: cover;
}

.bg-bottom {
  background-position: bottom;
}

.bg-left-top {
  background-position: left top;
}

.bg-repeat {
  background-repeat: repeat;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.p-0 {
  padding: 0px;
}

.p-2 {
  padding: 0.5rem;
}

.px-12 {
  padding-left: 3rem;
  padding-right: 3rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.pt-20 {
  padding-top: 5rem;
}

.pt-8 {
  padding-top: 2rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.font-sans {
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.text-bright-blue {
  --tw-text-opacity: 1;
  color: rgb(25 74 237 / var(--tw-text-opacity));
}

.text-leather-brown {
  --tw-text-opacity: 1;
  color: rgb(78 60 50 / var(--tw-text-opacity));
}

.text-parchment {
  --tw-text-opacity: 1;
  color: rgb(217 208 191 / var(--tw-text-opacity));
}

.text-parchment-pale {
  --tw-text-opacity: 1;
  color: rgb(217 208 191 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.no-underline {
  text-decoration-line: none;
}

.opacity-70 {
  opacity: 0.7;
}

.shadow-inner {
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-neutral-950 {
  --tw-shadow-color: #0a0a0a;
  --tw-shadow: var(--tw-shadow-colored);
}

.shadow-orange-950 {
  --tw-shadow-color: #431407;
  --tw-shadow: var(--tw-shadow-colored);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* color palette from <https://github.com/vuejs/theme> */

:root {
  --vt-c-white: #ffffff;
  --vt-c-white-soft: #f8f8f8;
  --vt-c-white-mute: #f2f2f2;
  --vt-c-black: #181818;
  --vt-c-black-soft: #222222;
  --vt-c-black-mute: #282828;
  --vt-c-indigo: #2c3e50;
  --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
  --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
  --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
  --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);
  --vt-c-text-light-1: var(--vt-c-indigo);
  --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
  --vt-c-text-dark-1: var(--vt-c-white);
  --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
}

/* semantic color variables for this project */

:root {
  --color-background: var(--vt-c-white);
  --color-background-soft: var(--vt-c-white-soft);
  --color-background-mute: var(--vt-c-white-mute);
  --color-border: var(--vt-c-divider-light-2);
  --color-border-hover: var(--vt-c-divider-light-1);
  --color-heading: var(--vt-c-text-light-1);
  --color-text: var(--vt-c-text-light-1);
  --section-gap: 160px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-background: var(--vt-c-black);
    --color-background-soft: var(--vt-c-black-soft);
    --color-background-mute: var(--vt-c-black-mute);
    --color-border: var(--vt-c-divider-dark-2);
    --color-border-hover: var(--vt-c-divider-dark-1);
    --color-heading: var(--vt-c-text-dark-1);
    --color-text: var(--vt-c-text-dark-2);
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  font-weight: normal;
}

.hover\:top-4:hover {
  top: 1rem;
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.focus\:max-h-none:focus {
  max-height: none;
}

.focus\:border-2:focus {
  border-width: 2px;
}

.focus\:p-4:focus {
  padding: 1rem;
}

.focus\:underline:focus {
  text-decoration-line: underline;
}

@media (min-width: 768px) {
  .md\:order-last {
    order: 9999;
  }

  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:w-auto {
    width: auto;
  }

  .md\:min-w-48 {
    min-width: 12rem;
  }

  .md\:min-w-56 {
    min-width: 14rem;
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:items-center {
    align-items: center;
  }

  .md\:gap-x-4 {
    -moz-column-gap: 1rem;
         column-gap: 1rem;
  }

  .md\:bg-background-texture {
    background-image: url('/src/assets/images/background-texture.svg');
  }

  .md\:p-0 {
    padding: 0px;
  }

  .md\:p-6 {
    padding: 1.5rem;
  }

  .md\:pt-28 {
    padding-top: 7rem;
  }
}

@media (min-width: 1024px) {
  .lg\:absolute {
    position: absolute;
  }

  .lg\:left-4 {
    left: 1rem;
  }

  .lg\:right-4 {
    right: 1rem;
  }

  .lg\:top-0 {
    top: 0px;
  }

  .lg\:inline-block {
    display: inline-block;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:px-12 {
    padding-left: 3rem;
    padding-right: 3rem;
  }

  .lg\:px-14 {
    padding-left: 3.5rem;
    padding-right: 3.5rem;
  }

  .lg\:pb-3 {
    padding-bottom: 0.75rem;
  }

  .lg\:pt-2 {
    padding-top: 0.5rem;
  }

  .lg\:fixed-center {
    position: fixed;
    left: 50%;
    transform: translate(-50%, 0);
  }
}

.dark\:border-parchment-pale:where(.dark, .dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(217 208 191 / var(--tw-border-opacity));
}

.dark\:bg-leather-brown:where(.dark, .dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(78 60 50 / var(--tw-bg-opacity));
}

.dark\:bg-parchment-dark:where(.dark, .dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(32 22 14 / var(--tw-bg-opacity));
}

.dark\:bg-none:where(.dark, .dark *) {
  background-image: none;
}

.dark\:from-parchment-dark:where(.dark, .dark *) {
  --tw-gradient-from: #20160E var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(32 22 14 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.dark\:text-light-blue:where(.dark, .dark *) {
  --tw-text-opacity: 1;
  color: rgb(126 197 246 / var(--tw-text-opacity));
}

.dark\:text-light-yellow:where(.dark, .dark *) {
  --tw-text-opacity: 1;
  color: rgb(229 222 217 / var(--tw-text-opacity));
}

.dark\:text-parchment-pale:where(.dark, .dark *) {
  --tw-text-opacity: 1;
  color: rgb(217 208 191 / var(--tw-text-opacity));
}
/*# sourceMappingURL=main.css.map */